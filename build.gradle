/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'adixit' at '12/15/20 9:13 AM' with Gradle 3.0
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.0/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
 // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
   // https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager
compile group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '4.1.0'

// https://mvnrepository.com/artifact/org.testng/testng
testCompile group: 'org.testng', name: 'testng', version: '6.10'
}

test {
//'test' is always cleaned (i.e. never 'UP-TO-DATE') so it gets executed every time:
	dependsOn 'cleanTest'
	//Run parallel test task using gradle
	 //maxParallelForks = Runtime.runtime.availableProcessors()
	 //maxParallelForks = 2
  // enable TestNG support (default is JUnit)
  useTestNG()
  {
      // To generate reports by TestNG library
    useDefaultListeners = true
  suites 'testng.xml'
  //includeGroups 'smoke','sanity' // We define the group name by using ‘includeGroups’ parameter.
  }
      // turn off Gradle's HTML report to avoid replacing the
    // reports generated by TestNG library
    //reports.html.enabled = true
     //if you want to display the following test events in console
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
  }